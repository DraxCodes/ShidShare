@page "/upload"
@using ShidShare.Services

@inject ISnackbar Snackbar
@inject ProjectGlobals Globals
@inject LocalStorageService LocalStorageService
@inject ClipboardService ClipboardService
@inject NavigationManager NavigationManger

<PageTitle>Upload Files</PageTitle>
<MudText Typo="Typo.h3" GutterBottom="true">Upload</MudText>

@if (!isLoading)
{
    <InputFile id="fileimageinput112" OnChange="UploadImageFiles" hidden multiple accept=".jpg, .jpeg, .png, .gif" />

    <MudButton HtmlTag="label"
           Variant="Variant.Filled"
           Color="Color.Primary"
           StartIcon="@Icons.Filled.CloudUpload"
           for="fileimageinput112">
        Upload Your Image Files
    </MudButton>
}
else
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
}

@code
{
    bool isLoading = false;


    private async Task UploadImageFiles(InputFileChangeEventArgs e)
    {
        isLoading = true;
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;

        var files = e.GetMultipleFiles();

        try
        {
            foreach (var file in files)
            {
                var newFileName = $"{Path.GetRandomFileName()}.{file.Name.Split(".").Last()}";
                var path = @$"{Globals.DefaultImageUploadLocation}\{newFileName}";

                await LocalStorageService.SaveImageAsync(path, file);

                await ClipboardService.WriteTextAsync($"{NavigationManger.BaseUri}images/{newFileName}");

                Snackbar.Add($"Image Uploaded, Link Copied to Clipboard.", Severity.Success);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }

        isLoading = false;
    }
}
